exit
invoices.failed.group(:customer_id).count
exit
params
exit
params
exit
InvoiceItem.where(invoices.include?(:id)).all.sum("unit_price * quantity")
InvoiceItem.where(invoices.include?(:id)).all.
InvoiceItem.where(invoices.include?(:id)).all.sum(:quantity)
InvoiceItem.where(invoices.include?(:id)).all.sum(unit_price)
InvoiceItem.where(invoices.include?(:id)).all
invoices
exit
params
exit
invoice_item
exit
repsonse.body
response
exit
response.body
response
repsonse
exit
Customer.where(params.first[0] => params.first[1])
Customer.where(params.first[0]: params.first[1])
Customer.where(params.first[0]: params.first[1]).all
Customer.where(first_name: "anibal")
Customer.where(first_name = "anibal")
params.first[0]
Customer.where(params.first[0] = params.first[1]).all
params
exit
params
exit
params.first[1].to_json
exit
next
params.first[1].to_json
params.first[1].to_datetime
params.first[1]
Customer.where(params.first[0] = params.first[1].to_s).all
params.first[0]
Customer.where(params.first[0] = params.first[1]).all
exit
Customer.where(params.first[0] = params.first[1]).all
exit
params
params[0]
params.first
Customer.where(params.first[0] = params.first).all
params
exit
params.first
params[0]
params
Customer.where(params[0][0]: params[0][1]).all
Customer.where(params[0][0]: params[0][1])
Customer.where(params[0]).count
Customer.where(params[0])
Customer.all.count
Customer.where(params[0])
Customer.where(params[0]).all
params
exit
Customer.find_by(params[0]).first
Customer.find_by(params[0])
params
